{"version":3,"sources":["App.js","pages/home/index.js","pages/login/index.js","utils/utils.js","axios/index.js","components/Header/index.js","config/menuConfig.js","components/NavLeft/index.js","admin.js","components/BaseForm/index.js","pages/upgrade/index.js","pages/user/feedback/index.js","pages/user/list/index.js","pages/user/list/editList.js","pages/user/list/editCreate.js","pages/manager/ad.js","pages/manager/cover.js","router.js","pages/nomatch/index.js","index.js"],"names":["App","react_default","a","createElement","this","props","children","Component","Home","className","Login","Option","es_select","utils","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","onChange","current","page","pageSize","page_size","total","total_count","showTotal","concat","showQuickJumper","getOptionList","options","map","item","push","value","id","key","name","Axios","option","Promise","resolve","reject","JsonP","url","param","err","res","status","error","axios","baseURL","method","timeout","params","then","response","code","modal","info","title","message","msg","_this","ajax","setState","list","item_list","index","all_count","Utils","requestList","Header","state","userName","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","dayPicture","dayPictureUrl","weather","_this2","setInterval","sysTime","getTime","row","col","span","href","src","alt","menuList","SubMenu","menu","NavLeft","ItemGroup","rootSubmenuKeys","openKeys","currentKey","renderMenu","Item","react_router_dom","to","onOpenChange","latestOpenKey","find","indexOf","menuTreeNode","MenuConfig","mode","theme","Admin","src_components_NavLeft","src_components_Header","FormItem","es_form","FilterForm","handleFilterSubmit","fieldsValue","form","getFieldsValue","filterSubmit","handleClickNew","handleClickBtn","onTimeStartChange","getFieldValue","validateFieldsAndScroll","onTimeEndChange","initFormList","getFieldDecorator","formList","formItemList","length","forEach","i","label","field","filter","initialValue","placeholder","width","type","city","style","timeStart","rules","validator","rule","timeEnd","isBefore","date_picker","locale","colon","isAfter","INPUT","input","RegExp","test","maxLength","SELECT","CHECKBOX","valuePropName","es_checkbox","showTime","format","layout","es_button","marginRight","onClick","create","TextArea","RadioGroup","es_radio","Group","Upgrade","isUserVisible","Object","assertThisInitialized","handleFilter","sys","sysName","begin_time","moment","end_time","handleVersionSubmit","roleForm","success","resetFields","obj","confirm","content","onOk","_this3","colums","dataIndex","align","render","upgrade","record","handleClick","card","BaseForm","backgroundColor","color","border","handleAdd","bind","fontSize","table","bordered","columns","dataSource","visible","onCancel","upgrade_VersionForm","wrappedComponentRef","inst","VersionForm","formItemLayout","labelCol","wrapperCol","upgrade_FormItem","assign","required","FeedBack","es_list","isDetailVisible","details","imgs","tel","dataType","pages","_this4","handleClickDetail","marginBottom","footer","feedback_VersionForm","detailData","split","renderItem","display","UserList","console","log","uid","username","history","handleClickEdit","handleClickUse","handleCreate","EditList","userId","match","fieldForms","remark","window","back","breadcrumb","separator","marginTop","editList_FormAccount","filterForm","filterItem","handleUpdata","cancelBtn","handleCancel","FormAccount","handleSelectChange","handleClickSave","fieldForm","handleClickCancel","editList_FormItem","readOnly","nick_name","editList_Option","logo","sex","city_id","user_pwd","article_count","collection_count","comment_count","editList_TextArea","rows","offset","EditCreate","objectSpread","editCreate_VersionForm","loading","e","handleChange","file","getBase64","originFileObj","imageUrl","img","reader","FileReader","addEventListener","result","readAsDataURL","uploadButton","icon","editCreate_FormItem","upload","listType","showUploadList","action","editCreate_RadioGroup","gutter","editCreate_Option","editCreate_TextArea","Adver","Cover","img_url","IRouter","src_App","admin","react_router","path","component","ReactDOM","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.6746e05c.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","\r\n/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\n\r\nimport React,{Component} from 'react';\r\n\r\nimport './index.less'\r\n\r\nclass Home extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-wrap'>\r\n                后台管理系统\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Home;\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React,{Component} from 'react';\r\n\r\nclass Login extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                login\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Login;\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | utils\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React from 'react'\r\nimport {Select} from \"antd\";\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default {\r\n    formateDate(time){\r\n        if(!time){\r\n            return\r\n        }\r\n        let date = new Date(time)\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate() + ' '+ date.getHours()+\":\"+date.getMinutes()+\":\"+date.getSeconds();\r\n    },\r\n    /*分页*/\r\n    pagination(data,callback){\r\n        return {\r\n            onChange :(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.data.page,\r\n            pageSize:data.data.page_size,\r\n            total:data.data.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.data.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n    },\r\n    getOptionList(data) {\r\n        if (!data) {\r\n            return []\r\n        }\r\n        let options = [];\r\n        data.map((item) => {\r\n            options.push(<Option value={item.id} key={item.name}>{item.name}</Option>)\r\n        })\r\n        return options\r\n    },\r\n\r\n}\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport JsonP from 'jsonp';\r\n\r\nimport axios from 'axios';\r\nimport {Modal} from 'antd';\r\nimport Utils from './../utils/utils'\r\nexport default class Axios {\r\n\r\n    static jsonp(option) {\r\n        return new Promise((resolve, reject) => {\r\n            JsonP(option.url, {\r\n                param: 'callback'\r\n            }, function (err, res) {\r\n                if (res.status === 'success') {\r\n                    resolve(res)\r\n                } else {\r\n                    reject(res.error)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    static ajax(option) {\r\n        const baseApi = 'https://www.easy-mock.com/mock/5c9d841bbdcc8e1936407e56/admin';\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                url: option.url,\r\n                baseURL: baseApi,\r\n                method: 'GET',\r\n                timeout: 5000,\r\n                params: (option.data && option.data.param) || ''\r\n            }).then((response) => {\r\n                if (response.status === 200) {\r\n                    let res = response.data;\r\n                    if (res.code == 0) {\r\n                        resolve(res)\r\n                    } else {\r\n                        Modal.info({\r\n                            title: '错误提示',\r\n                            message: res.msg\r\n                        })\r\n                    }\r\n                } else {\r\n                    reject(response.data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    /*查询*/\r\n    static requestList(_this,url,params){\r\n        var data ={\r\n            params:params\r\n        }\r\n        this.ajax({\r\n            url:url,\r\n            data\r\n        }).then((data)=>{\r\n            if (data&& data.data) {\r\n                _this.setState({\r\n                    list: data.data.item_list.map((item, index) => {\r\n                        item.key = index;\r\n                        return item\r\n                    }),\r\n                    total:data.data.all_count,\r\n                    pagination: Utils.pagination(data, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList()\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Row, Col} from \"antd\";\r\n\r\nimport Utils from './../../utils/utils';\r\nimport axios from './../../axios';\r\nimport './index.less'\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        userName: '',\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            userName: '超级管理员'\r\n        })\r\n        setInterval(() => {\r\n            let sysTime = Utils.formateDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        }, 1000)\r\n        this.getWeatherAPIData();\r\n\r\n    }\r\n\r\n    getWeatherAPIData = () => {\r\n        let city = '苏州';\r\n        axios.jsonp({\r\n            url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        }).then((res) => {\r\n            // console.log(12, res)\r\n            if (res.status === 'success') {\r\n                let data = res.results[0].weather_data[0];\r\n                this.setState({\r\n                    dayPicture: data.dayPictureUrl,\r\n                    weather: data.weather\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    <Col span={24}>\r\n                        <span>欢迎，{this.state.userName}</span>\r\n                        <a href=\"javaScript:void(0);\">退出</a>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"breadcrumb\">\r\n                    <Col span={4} className=\"breadcrumb-title\">\r\n                        <span>首页</span>\r\n                    </Col>\r\n                    <Col span={20} className=\"weather\">\r\n                        <span className=\"date\">\r\n                            {this.state.sysTime}\r\n                        </span>\r\n                        <span className=\"weather-img\">\r\n                            <img src={this.state.dayPicture} alt=\"\"/>\r\n                        </span>\r\n                        <span className=\"weather-detail\">\r\n                             {this.state.weather}\r\n                        </span>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | menuConfig | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\n\r\nconst menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/home'\r\n    },\r\n    {\r\n        title: '内容管理',\r\n        key: '/admin/content',\r\n        children: [\r\n            {\r\n                title: '材料分类榜单管理',\r\n                key: '/admin/content/materialClassify',\r\n            },\r\n            {\r\n                title: '材料品牌榜单管理',\r\n                key: '/admin/content/materialBill',\r\n            },\r\n            {\r\n                title: '预算版本管理',\r\n                key: '/admin/content/budgetVersion',\r\n            },\r\n            {\r\n                title: '预算类目管理',\r\n                key: '/admin/content/budgetClassify',\r\n            },\r\n            {\r\n                title: '对比管理',\r\n                key: '/admin/content/contrast',\r\n            },\r\n            {\r\n                title: '经验管理',\r\n                key: '/admin/content/experience',\r\n            },\r\n            {\r\n                title: '文章管理',\r\n                key: '/admin/content/article',\r\n            },\r\n            {\r\n                title: '话题管理',\r\n                key: '/admin/content/topic',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '升级管理',\r\n        key: '/admin/upgrade'\r\n    },\r\n\r\n    {\r\n        title: '运营管理',\r\n        key: '/admin/manager',\r\n        children: [\r\n            {\r\n                title: '封面管理',\r\n                key: '/admin/manager/cover',\r\n            },\r\n            {\r\n                title: '广告位管理',\r\n                key: '/admin/manager/ad',\r\n            }\r\n        ]\r\n    },\r\n\r\n    {\r\n        title: '用户管理',\r\n        key: '/admin/user',\r\n        children: [\r\n            {\r\n                title: '用户反馈',\r\n                key: '/admin/user/feedback',\r\n            },\r\n            {\r\n                title: '用户管理',\r\n                key: '/admin/user/list',\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\n/*const menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/home'\r\n    },\r\n    {\r\n        title: 'UI',\r\n        key: '/admin/ui',\r\n        children: [\r\n            {\r\n                title: '按钮',\r\n                key: '/admin/ui/buttons',\r\n            },\r\n            {\r\n                title: '弹框',\r\n                key: '/admin/ui/modals',\r\n            },\r\n            {\r\n                title: 'Loading',\r\n                key: '/admin/ui/loadings',\r\n            },\r\n            {\r\n                title: '通知提醒',\r\n                key: '/admin/ui/notification',\r\n            },\r\n            {\r\n                title: '全局Message',\r\n                key: '/admin/ui/messages',\r\n            },\r\n            {\r\n                title: 'Tab页签',\r\n                key: '/admin/ui/tabs',\r\n            },\r\n            {\r\n                title: '图片画廊',\r\n                key: '/admin/ui/gallery',\r\n            },\r\n            {\r\n                title: '轮播图',\r\n                key: '/admin/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表单',\r\n        key: '/form',\r\n        children: [\r\n            {\r\n                title: '登录',\r\n                key: '/form/login',\r\n            },\r\n            {\r\n                title: '注册',\r\n                key: '/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表格',\r\n        key: '/table',\r\n        children: [\r\n            {\r\n                title: '基础表格',\r\n                key: '/table/basic',\r\n            },\r\n            {\r\n                title: '高级表格',\r\n                key: '/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '富文本',\r\n        key: '/rich'\r\n    },\r\n    {\r\n        title: '城市管理',\r\n        key: '/city'\r\n    },\r\n    {\r\n        title: '订单管理',\r\n        key: '/order',\r\n        btnList: [\r\n            {\r\n                title: '订单详情',\r\n                key: 'detail'\r\n            },\r\n            {\r\n                title: '结束订单',\r\n                key: 'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '员工管理',\r\n        key: '/user'\r\n    },\r\n    {\r\n        title: '车辆地图',\r\n        key: '/bikeMap'\r\n    },\r\n    {\r\n        title: '图标',\r\n        key: '/charts',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '权限设置',\r\n        key: '/permission'\r\n    },\r\n];*/\r\nexport default menuList;\r\n","import React, {Component} from 'react';\r\nimport {Menu, Icon} from \"antd\";\r\nimport './index.less'\r\nimport MenuConfig from './../../config/menuConfig';\r\n\r\n//动态添加菜单栏链接\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nclass NavLeft extends Component {\r\n\r\n    rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n    state = {\r\n        openKeys: ['sub1'],\r\n        currentKey: ''\r\n    };\r\n\r\n    componentWillMount() {\r\n\r\n        const menuTreeNode = this.renderMenu(MenuConfig)\r\n        this.setState({\r\n            menuTreeNode\r\n        })\r\n    }\r\n\r\n    renderMenu = (data) => {\r\n        return data.map((item) => {\r\n            if (item.children) {\r\n                return (\r\n                    <SubMenu title={item.title} key={item.key}>\r\n                        {this.renderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item title={item.title} key={item.key}>\r\n                <NavLink to={item.key}> {item.title}</NavLink>\r\n            </Menu.Item>\r\n        })\r\n    }\r\n    onOpenChange = (openKeys) => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({openKeys});\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"logo\">\r\n                    <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                    <h1>zxs 管理后台</h1>\r\n                </div>\r\n                <Menu mode=\"inline\"\r\n                      theme='dark'\r\n                      openKeys={this.state.openKeys}\r\n                      onOpenChange={this.onOpenChange}\r\n                >\r\n                    {/*遍历后的menu*/}\r\n                    {this.state.menuTreeNode}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NavLeft;\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | Admin\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Row, Col} from \"antd\";\r\n\r\nimport Header from './components/Header';\r\nimport NavLeft from './components/NavLeft';\r\nimport Home from './pages/home';\r\nimport './style/common.less';\r\n\r\nclass Admin extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row className='container'>\r\n                <Col span={3} className='nav-left'>\r\n                    <NavLeft/>\r\n                </Col>\r\n                <Col span={21} className=\"main\">\r\n                    <Header/>\r\n                    <Row className='content'>\r\n                        {/*content*/}\r\n                        {/*<Home/>*/}\r\n                        {/*<Buttons/>*/}\r\n                        {/*加载每个子组件*/}\r\n                        {this.props.children}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Admin\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Input, Select, Form, Button, Checkbox, Radio, DatePicker} from \"antd\";\r\nimport Utils from '../../utils/utils';\r\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\r\n\r\nimport moment from 'moment'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass FilterForm extends Component {\r\n    handleFilterSubmit = () => {\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    }\r\n    handleClickNew = () => {\r\n        this.props.handleClickBtn();\r\n    }\r\n    onTimeStartChange = (value) => {\r\n        if (value) {\r\n            const form = this.props.form;\r\n            const timeEnd = form.getFieldValue('timeEnd');\r\n            if (timeEnd) form.validateFieldsAndScroll(['timeEnd']);\r\n        }\r\n    };\r\n    onTimeEndChange = (value) => {\r\n        if (value) {\r\n            const form = this.props.form;\r\n            const timeStart = form.getFieldValue('timeStart');\r\n            if (timeStart) form.validateFieldsAndScroll(['timeStart']);\r\n        }\r\n    };\r\n\r\n    initFormList = () => {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const formList = this.props.formList; // 从父组件Order.js 中获取该对象进行使用\r\n        const formItemList = [];\r\n        if (formList && formList.length > 0) {\r\n            formList.forEach((item, i) => {\r\n                let label = item.label;\r\n                let field = item.filter;\r\n                let initialValue = item.initialValue || ''; //默认给空字符串\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                if (item.type == '城市') {\r\n                    const city = <FormItem label=\"城市\" key={field}>\r\n                        {\r\n                            getFieldDecorator('city', {\r\n                                initialValue: '0'\r\n                            })(\r\n                                <Select\r\n                                    style={{width: 80}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    {Utils.getOptionList([{id: 0, name: '全部'}, {id: 1, name: '北京'}, {\r\n                                        id: 2,\r\n                                        name: '上海'\r\n                                    }, {id: 3, name: '天津'}, {id: 4, name: '杭州'}])}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(city);\r\n                } else if (item.type == '时间查询') {\r\n                    const timeStart = <FormItem label=\"订单时间\" key='timeStart'>\r\n                        {\r\n                            getFieldDecorator('timeStart', {\r\n                                rules: [\r\n                                    {\r\n                                        validator: (rule, value, callback) => {\r\n                                            const timeEnd = this.props.form.getFieldValue('timeEnd') || '';\r\n                                            if (timeEnd && timeEnd.isBefore(value)) {\r\n                                                callback('开始时间必须小于结束时间');\r\n                                            } else {\r\n                                                callback();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <DatePicker onChange={this.onTimeStartChange} locale={locale} placeholder=\"请选择开始时间\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(timeStart);\r\n                    const timeEnd = <FormItem label=\"~\" colon={false} key=\"timeEnd\">\r\n                        {\r\n                            getFieldDecorator('timeEnd', {\r\n                                rules: [\r\n                                    {\r\n                                        validator: (rule, value, callback) => {\r\n                                            const timeStart = this.props.form.getFieldValue('timeStart') || '';\r\n                                            if (timeStart && timeStart.isAfter(value)) {\r\n                                                callback('结束时间必须大于开始时间');\r\n                                            } else {\r\n                                                callback();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <DatePicker onChange={this.onTimeEndChange} locale={locale} placeholder=\"请选择结束时间\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(timeEnd);\r\n\r\n                } else if (item.type == 'INPUT') {\r\n                    // 中括号 [变量]  ,会将其看作变量对待\r\n                    const INPUT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Input type='text' style={{width: [width]}} placeholder={placeholder}/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(INPUT);\r\n                } else if (item.type == 'PHONE') {\r\n                    // 中括号 [变量]  ,会将其看作变量对待\r\n                    const INPUT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                initialValue: initialValue,\r\n                                rules: [\r\n                                    {\r\n                                        validator: (rule, value, callback) => {\r\n                                            const reg = RegExp(\"^((13[0-9])|(14[5,7,8,9])|(15[0-3,5-9])|(17[0,1,3,5-8])|(18[0-9])|166|198|199|(147))\\\\d{8}$\");\r\n                                            if (reg.test(value)) {\r\n                                                callback('请输入正确手机号')\r\n                                            } else {\r\n                                                callback()\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            })(\r\n                                <Input type='text' style={{width: [width]}} placeholder={placeholder} maxLength=\"11\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(INPUT);\r\n                } else if (item.type == 'SELECT') {\r\n                    // 中括号 [变量]  ,会将其看作变量对待\r\n                    const SELECT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                initialValue: 0,\r\n                            })(\r\n                                <Select\r\n                                    style={{width: width}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    {Utils.getOptionList(item.list)}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(SELECT);\r\n                } else if (item.type == 'CHECKBOX') {\r\n                    const CHECKBOX = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                valuePropName: 'checked', // 设置checkbox的属性\r\n                                initialValue: initialValue // true | false\r\n                            })(\r\n                                <Checkbox>\r\n                                    {label}\r\n                                </Checkbox>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(CHECKBOX);\r\n                } else if (item.type == 'DATE') {\r\n                    const Date = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field])(\r\n                                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(Date);\r\n                }\r\n            });\r\n        }\r\n        return formItemList;\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Form layout='inline'>\r\n                {this.initFormList()}\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{marginRight: 100}} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    {/*     <Button type=\"primary\"\r\n                            style={{backgroundColor: '#67c23a', color: '#fff', border: 'none'}}\r\n                            onClick={this.handleClickNew}\r\n                    >新建版本</Button>*/}\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FilterForm = Form.create({})(FilterForm)\r\n/*\r\nclass FilterForm extends Component{\r\n    handleFilterSubmit = () => {\r\n        let fieldsValue = this.props.form.getFieldsValue();// 获取表单的值\r\n        this.props.filterSubmit(fieldsValue); // 将子组件的值传递到父组件(order.js)\r\n    };\r\n\r\n    reset = () => {\r\n        this.props.form.resetFields(); // 重置表单的方法\r\n    };\r\n\r\n   /!* handleOnChange=(e)=>{\r\n        console.log(123,e.target.value)\r\n    }*!/\r\n    initFormList = () => {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const formList = this.props.formList; // 从父组件Order.js 中获取该对象进行使用\r\n        const formItemList = [];\r\n\r\n        function onChange(value, dateString) {\r\n            console.log('Selected Time: ', value);\r\n            console.log('Formatted Selected Time: ', dateString);\r\n        }\r\n        if (formList && formList.length > 0) {\r\n            formList.forEach((item, i) => {\r\n                let label = item.label;\r\n                let field = item.filter;\r\n                let initialValue = item.initialValue || ''; //默认给空字符串\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                if (item.type == 'SELECT') {\r\n                    const city = <FormItem label=\"城市\" key={field}>\r\n                        {\r\n                            getFieldDecorator('system_id', {\r\n                                initialValue: '0'\r\n                            })(\r\n                                <Select\r\n                                    style={{width: 150}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    {Utils.getOptionList([{id: '0', name: '系统分类'}, {id: '1', name: 'Android'}, {\r\n                                        id: '2',\r\n                                        name: 'IOS'\r\n                                    }])}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(city);\r\n                } else if (item.type == 'DATE') {\r\n                    const begin_time = <FormItem label=\"订单时间\" key={field}>\r\n                        {\r\n                            getFieldDecorator('begin_time',{\r\n                            })(\r\n                                <DatePicker showTime={false} locale={locale} onChange={onChange}  placeholder={placeholder} />\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(begin_time);\r\n\r\n                    const end_time = <FormItem label=\"~\" colon={false} key={field}>\r\n                        {\r\n                            getFieldDecorator('end_time')(\r\n                                <DatePicker showTime={false} locale={locale}  placeholder={placeholder} />\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(end_time);\r\n\r\n                } else if (item.type == 'INPUT') {\r\n                    // 中括号 [变量]  ,会将其看作变量对待\r\n                    const INPUT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Input type='text' style={{width: [width]}} placeholder={placeholder}/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(INPUT);\r\n                } else if (item.type == 'SELECT') {\r\n                    // 中括号 [变量]  ,会将其看作变量对待\r\n                    const SELECT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Select\r\n                                    style={{width: width}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    {Utils.getOptionList(item.list)}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(SELECT);\r\n                } else if (item.type == 'CHECKBOX') {\r\n                    const CHECKBOX = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field], {\r\n                                valuePropName: 'checked', // 设置checkbox的属性\r\n                                initialValue: initialValue // true | false\r\n                            })(\r\n                                <Checkbox>\r\n                                    {label}\r\n                                </Checkbox>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(CHECKBOX);\r\n                } else if (item.type == 'DATE') {\r\n                    const Date = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field],{\r\n\r\n                            })(\r\n                                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            )\r\n                        }\r\n                    </FormItem>;\r\n                    formItemList.push(Date);\r\n                }\r\n            });\r\n        }\r\n        return formItemList;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form layout='inline'>\r\n                {this.initFormList()}\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{margin: '0 20px'}} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    {/!*<Button onClick={this.reset}>重置</Button>*!/}\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Form.create({})(FilterForm);\r\n*/\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Card, Input, Button, Form, Select, DatePicker, Table, message, Modal, Radio} from \"antd\";\r\nimport axios from './../../axios';\r\nimport Utils from './../../utils/utils';\r\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\r\nimport moment from 'moment'\r\n//封装组件\r\nimport BaseForm from './../../components/BaseForm'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport default class Upgrade extends Component {\r\n\r\n    state = {\r\n        list: [],\r\n        total: '',\r\n        isUserVisible: false\r\n    }\r\n    params = {\r\n        page: 1,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () => {\r\n        let _this = this;\r\n        // axios.requestList(this, '/upgrade/list', this.params)\r\n        axios.ajax({\r\n            url: '/upgrade/list',\r\n            data: {\r\n                param: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        })\r\n            .then((res) => {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    list: list,\r\n                    total: res.data.all_count,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList()\r\n                    })\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    // 删除\r\n    handleClick(obj) {\r\n        const _this = this;\r\n        Modal.confirm({\r\n            title: '提示',\r\n            content: '确认要删除选中',\r\n            onOk() {\r\n                axios.ajax({\r\n                    url: \"/upgrade/delversion\",\r\n                    data: {\r\n                        params: obj.id\r\n                    }\r\n                }).then((res) => {\r\n                    if (res.code == 0) {\r\n                        _this.requestList();\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAdd() {\r\n        this.setState({\r\n            isUserVisible: true\r\n        })\r\n    }\r\n    /*封装头部基础组件*/\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '系统分类',\r\n            placeholder: '全部',\r\n            initialValue: '0',\r\n            width: 100,\r\n            filter: 'system_id',\r\n            list: [\r\n                {\r\n                    id: '0',\r\n                    name: '系统分类'\r\n                },\r\n                {\r\n                    id: '1',\r\n                    name: 'Android'\r\n                },\r\n                {\r\n                    id: '2',\r\n                    name: 'IOS'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            type: 'TIME_SEARCH',\r\n\r\n        },\r\n        {\r\n            type: 'INPUT',\r\n            label: '订单状态',\r\n            placeholder: '订单状态',\r\n            filter: 'order_statu',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            type: '时间查询',\r\n            label: '请选择入职如期',\r\n            placeholder: '请选择日期',\r\n            width: 75,\r\n            filter: 'begin_time',\r\n        },\r\n    ]\r\n    /*查询*/\r\n    handleFilter = (fieldsValue) => {\r\n        let _this = this;\r\n        const sys = fieldsValue['system_class'];\r\n        const sysName = fieldsValue['system_name'];\r\n        const begin_time = moment(fieldsValue['timeStart']).format('YYYY-MM-DD') || \"\";\r\n        const end_time = moment(fieldsValue['timeEnd']).format('YYYY-MM-DD') || \"\";\r\n\r\n        // axios.requestList(this, '/upgrade/list', this.params)\r\n        // this.requestList();\r\n        axios.ajax({\r\n            url: '/upgrade/list',\r\n            data: {\r\n                param: {\r\n                    page: this.params.page,\r\n                    sys,\r\n                    sysName,\r\n                    begin_time,\r\n                    end_time\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            let list = res.data.item_list.map((item, index) => {\r\n                item.key = index;\r\n                return item;\r\n            });\r\n            this.setState({\r\n                list: list,\r\n                total: res.data.all_count,\r\n                pagination: Utils.pagination(res, (current) => {\r\n                    _this.params.page = current;\r\n                    _this.requestList()\r\n                })\r\n            })\r\n        })\r\n    }\r\n    handleVersionSubmit = () => {\r\n        const data = this.roleForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url: '/upgrade/add',\r\n            data: {\r\n                param: {\r\n                    params: data\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                this.setState({\r\n                    isUserVisible: false\r\n                })\r\n                message.success('创建新版本成功')\r\n                /*表单内容清空*/\r\n                this.roleForm.props.form.resetFields();\r\n                this.requestList();\r\n            } else {\r\n                message.error(res)\r\n            }\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const colums = [\r\n            {\r\n                title: '排序ID',\r\n                dataIndex: 'id',\r\n                width: 75,\r\n                align:\"center\"\r\n            }, {\r\n                title: '系统',\r\n                dataIndex: 'category',\r\n                width: 75,\r\n                align:\"center\"\r\n\r\n            }, {\r\n                title: '版本号',\r\n                dataIndex: 'version_code',\r\n                width: 75,\r\n                align:\"center\"\r\n            }, {\r\n                title: '版本名称',\r\n                dataIndex: 'version',\r\n                width: 75,\r\n                align:\"center\"\r\n            }, {\r\n                title: 'APP下载链接',\r\n                dataIndex: 'link',\r\n                width: 50\r\n            }, {\r\n                title: '是否强制下载',\r\n                dataIndex: 'upgrade',\r\n                width: 70,\r\n                align:\"center\",\r\n                render: (render, obj) => {\r\n                    return obj.upgrade = obj.upgrade == '0' ? '否' : '是';\r\n                }\r\n            }, {\r\n                title: '升级内容',\r\n                dataIndex: 'content',\r\n                width: 150,\r\n                align:\"center\"\r\n            }, {\r\n                title: '发布时间',\r\n                dataIndex: 'release_time',\r\n                width: 75,\r\n                align:\"center\"\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'sys_opera',\r\n                width: 75,\r\n                align:\"center\",\r\n                render: (record, obj) => {\r\n                    return <a href=\"#\" onClick={() => this.handleClick(obj)}>删除</a>\r\n                }\r\n\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title='升级管理'>\r\n                    <Col span={20}>\r\n                        <BaseForm formList={this.formList} filterSubmit={this.handleFilter} />\r\n                    </Col>\r\n                    <Col span={2}>   <Button type=\"primary\"\r\n                                    style={{backgroundColor: '#67c23a', color: '#fff', border: 'none'}}\r\n                                    onClick={this.handleAdd.bind(this)}\r\n                    >新建版本</Button></Col>\r\n                </Card>\r\n                <Card>\r\n                    <Col><h1 style={{fontSize: 18}}>全部(<span\r\n                        style={{color: '#67C23A'}}>{this.state.total}</span>)</h1></Col>\r\n                    <div className=\"content-wrap\">\r\n                        <Table\r\n                            bordered\r\n                            columns={colums}\r\n                            dataSource={this.state.list}\r\n                            pagination={this.state.pagination}\r\n\r\n                        />\r\n                    </div>\r\n                </Card>\r\n                {/*弹窗*/}\r\n                <Modal\r\n                    title=\"新建版本\"\r\n                    visible={this.state.isUserVisible}\r\n                    onOk={this.handleVersionSubmit}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isUserVisible: false,\r\n                        })\r\n                    }}\r\n                >\r\n                    <VersionForm\r\n                        wrappedComponentRef={(inst) => {  //获取嵌套表格内容\r\n                            this.roleForm = inst\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*子组件1*/\r\n/*class FilterForm extends Component {\r\n\r\n    handleFilterSubmit = () => {\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    }\r\n    handleClickNew = () => {\r\n        this.props.handleClickBtn();\r\n    }\r\n    onTimeStartChange = (value) => {\r\n        if (value) {\r\n            const form = this.props.form;\r\n            const timeEnd = form.getFieldValue('timeEnd');\r\n            if (timeEnd) form.validateFieldsAndScroll(['timeEnd']);\r\n        }\r\n    };\r\n    onTimeEndChange = (value) => {\r\n        if (value) {\r\n            const form = this.props.form;\r\n            const timeStart = form.getFieldValue('timeStart');\r\n            if (timeStart) form.validateFieldsAndScroll(['timeStart']);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <Form layout='inline'>\r\n                <FormItem label=\"系统分类:\">\r\n                    {\r\n                        getFieldDecorator(\"system_class\")(\r\n                            <Select style={{width: 100}} placeholder=\"系统分类\">\r\n                                <Option value=\"\">系统分类</Option>\r\n                                <Option value=\"1\">Android</Option>\r\n                                <Option value=\"2\">IOS</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"版本名称:\">\r\n                    {\r\n                        getFieldDecorator(\"system_name\")(\r\n                            <Input placeholder=\"版本名称\"/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"时间:\">\r\n                    {getFieldDecorator('timeStart', {\r\n                        rules: [\r\n                            {\r\n                                validator: (rule, value, callback) => {\r\n                                    const timeEnd = this.props.form.getFieldValue('timeEnd');\r\n                                    if (timeEnd && timeEnd.isBefore(value)) {\r\n                                        callback('开始时间必须小于结束时间');\r\n                                    } else {\r\n                                        callback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    })(<DatePicker onChange={this.onTimeStartChange} locale={locale} placeholder=\"请选择开始时间\"/>)}\r\n                </FormItem>\r\n                <FormItem label=\"\">\r\n                    {getFieldDecorator('timeEnd', {\r\n                        rules: [\r\n                            {\r\n                                validator: (rule, value, callback) => {\r\n                                    const timeStart = this.props.form.getFieldValue('timeStart');\r\n                                    if (timeStart && timeStart.isAfter(value)) {\r\n                                        callback('结束时间必须大于开始时间');\r\n                                    } else {\r\n                                        callback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    })(<DatePicker onChange={this.onTimeEndChange} locale={locale} placeholder=\"请选择结束时间\"/>)}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{marginRight: 300}} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    <Button type=\"primary\"\r\n                            style={{backgroundColor: '#67c23a', color: '#fff', border: 'none'}}\r\n                            onClick={this.handleClickNew}\r\n                    >新建版本</Button>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nFilterForm = Form.create({})(FilterForm);*/\r\n\r\n/*子组件2*/\r\nclass VersionForm extends Component {\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 6\r\n            },\r\n            wrapperCol: {\r\n                span: 18\r\n            }\r\n        }\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"升级系统\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"state\", {\r\n                            rules: [\r\n                                {required: true}\r\n                            ]\r\n                        })(\r\n                            <RadioGroup>\r\n                                <Radio value={1}>Android</Radio>\r\n                                <Radio value={2}>IOS</Radio>\r\n                            </RadioGroup>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"版本号\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"ver_num\", {\r\n                            rules: [\r\n                                {required: true,}\r\n                            ]\r\n                        })(\r\n                            <Input type='text' placeholder='请输入版本号'/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"版本名称\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"ver_name\", {\r\n                            rules: [\r\n                                {required: true}\r\n                            ]\r\n                        })(\r\n                            <Input type='text' placeholder='请输入版本名称'/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"app下载链接地址\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"app_addr\", {\r\n                            rules: [\r\n                                {required: true}\r\n                            ]\r\n                        })(\r\n                            <Input type='text' placeholder='请输入app链接地址'/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"是否强制升级\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"upgrade\", {\r\n                            rules: [\r\n                                {required: true}\r\n                            ]\r\n                        })(\r\n                            <RadioGroup>\r\n                                <Radio value={1}>是</Radio>\r\n                                <Radio value={0}>否</Radio>\r\n                            </RadioGroup>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"升级内容\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator(\"upgrade_content\")(\r\n                            <TextArea placeholder=\"升级内容\"></TextArea>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nVersionForm = Form.create({})(VersionForm);\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Card, Table, Modal, Form, Radio, Input, List, Avatar} from \"antd\";\r\nimport BaseForm from './../../../components/BaseForm';\r\nimport axios from './../../../axios';\r\nimport Utils from './../../../utils/utils'\r\nimport moment from 'moment'\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst Item = List.Item\r\n\r\nclass FeedBack extends Component {\r\n\r\n    state = {\r\n        list: [],\r\n        isDetailVisible: false,\r\n        details: {\r\n            id: '',\r\n            imgs: '',\r\n            content: '',\r\n            tel: '',\r\n            time: ''\r\n        }\r\n    }\r\n    params = {\r\n        page: 1,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.ajax({\r\n            url: '/feedback/list',\r\n            type: 'GET',\r\n            dataType: 'JSON',\r\n            data: {\r\n                param:{\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index;\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    list: list,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /*查询*/\r\n    handleFilter(fieldsValue) {\r\n        const _this = this;\r\n        const begin_time = moment(fieldsValue['timeStart']).format('YYYY-MM-DD') || \"\";\r\n        const end_time = moment(fieldsValue['timeEnd']).format('YYYY-MM-DD') || \"\";\r\n        axios.ajax({\r\n            url: '/feedback/list',\r\n            data: {\r\n                param: {\r\n                    page: this.pages,\r\n                    begin_time,\r\n                    end_time\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index;\r\n                    return item\r\n                });\r\n                this.setState({\r\n                    list: list,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type: '时间查询',\r\n            label: '请选择入职如期',\r\n            placeholder: '请选择日期',\r\n            width: 75,\r\n            filter: 'begin_time',\r\n        },\r\n    ]\r\n\r\n    /*产看详情*/\r\n    handleClickDetail(obj) {\r\n        this.setState({\r\n            isDetailVisible: true\r\n        })\r\n        const _this = this;\r\n        axios.ajax({\r\n            url: '/feedback/info',\r\n            type: 'GET',\r\n            dataType: \"JSON\",\r\n            data: {\r\n                param: {\r\n                    id: obj.id\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let tempData = res.data.item_list;\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '序号',\r\n                dataIndex: 'id',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: 'UID',\r\n                dataIndex: 'user_id',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '反馈内容',\r\n                dataIndex: 'content',\r\n                width: 150,\r\n                align: \"center\"\r\n            }, {\r\n                title: '手机号',\r\n                dataIndex: 'tel',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '反馈时间',\r\n                dataIndex: 'time',\r\n                width: 100,\r\n                align: \"center\"\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'operator',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record, obj) => {\r\n                    return <a href=\"JavaScript:void (0)\" onClick={() => this.handleClickDetail(obj)}>查看详情</a>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"用户反馈\" style={{marginBottom: 10}}>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter.bind(this)}></BaseForm>\r\n                </Card>\r\n                <Card>\r\n                    <Table\r\n                        columns={columns}\r\n                        bordered\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    style={{width:800}}\r\n                    title='反馈详情'\r\n                    visible={this.state.isDetailVisible}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isDetailVisible: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <VersionForm detailData={this.state.details}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FeedBack;\r\n\r\nclass VersionForm extends Component {\r\n    render() {\r\n        let data = [{\r\n            id: '11',\r\n            content: \"af\",\r\n            imgs: [\"http://dummyimage.com/100x100\",\r\n                \"http://dummyimage.com/100x100\",\r\n                \"http://dummyimage.com/100x100\"],\r\n            tel: '15151',\r\n            time: '2019-04-08'\r\n        }];\r\n        // data = this.props.detailData;\r\n        return (\r\n            <div>\r\n                <List\r\n                    dataSource={data}\r\n                    split={false}\r\n                    renderItem={item => {\r\n                        return <div>\r\n                            <List.Item>UID:{item.id} </List.Item>\r\n                            <List.Item>反馈内容:{item.content} </List.Item>\r\n                            <List.Item>图片: {item.imgs.map((item, index) => {\r\n                                return <div key={index} style={{display:'inline',marginRight:5}}>\r\n                                    <img src={item} alt=\"\"/>\r\n                                </div>\r\n                            })}\r\n                            </List.Item>\r\n                            <List.Item>手机号:{item.tel} </List.Item>\r\n                            <List.Item>反馈时间:{item.time} </List.Item>\r\n                        </div>\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Col, Card, Button, Table, Modal,message} from \"antd\";\r\nimport BaseForm from './../../../components/BaseForm';\r\nimport axios from './../../../axios'\r\nimport Utils from './../../../utils/utils'\r\nimport moment from \"../feedback\";\r\n\r\nconst confirm = Modal.confirm\r\n\r\nclass UserList extends Component {\r\n\r\n    state = {\r\n        list: [],\r\n        visible: false\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.ajax({\r\n            url: '/user/userlist',\r\n            type: 'GET',\r\n            dataType: 'JSON',\r\n            data: {\r\n                param: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    list: list,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        console.log('current', current)\r\n                        _this.params.page = current;\r\n                        _this.requestList()\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type: 'INPUT',\r\n            label: 'UID',\r\n            placeholder: '',\r\n            width: 75,\r\n            filter: 'UID',\r\n        },\r\n        {\r\n            type: 'INPUT',\r\n            label: '用户名',\r\n            placeholder: '',\r\n            width: 75,\r\n            filter: 'username',\r\n        },\r\n        {\r\n            type: 'PHONE',\r\n            label: '手机号',\r\n            placeholder: '',\r\n            width: 75,\r\n            filter: 'tel',\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '状态',\r\n            placeholder: '',\r\n            width: 100,\r\n            list: [\r\n                {\r\n                    id: 0,\r\n                    name: '全部状态'\r\n                }, {\r\n                    id: 1,\r\n                    name: '正常'\r\n                }, {\r\n                    id: 2,\r\n                    name: '停用'\r\n                }\r\n            ],\r\n            filter: 'status',\r\n        },\r\n    ];\r\n\r\n    handleFilter(fieldsValue) {\r\n        const _this = this;\r\n        const uid = fieldsValue['UID'];\r\n        const username = fieldsValue['username'];\r\n        const tel = fieldsValue['tel'];\r\n        const status = fieldsValue['status'];\r\n        axios.ajax({\r\n            url: '/user/userlist',\r\n            data: {\r\n                param: {\r\n                    page: this.params.page,\r\n                    uid,\r\n                    username,\r\n                    tel,\r\n                    status\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index;\r\n                    return item\r\n                });\r\n                this.setState({\r\n                    list: list,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClickEdit(obj) {\r\n        this.props.history.push(\"/user/list/\" + obj.id)\r\n    }\r\n    handleCreate(){\r\n        this.props.history.push('/user/editCreate')\r\n    }\r\n\r\n    handleClickUse(obj) {\r\n        const _this =this;\r\n        const status = obj.status == '0' ? '禁用' : '启用';\r\n        this.setState({\r\n            visible: true\r\n        })\r\n        confirm({\r\n            title: '提示',\r\n            content: '你确定要' + status,\r\n            onOk() {\r\n                axios.ajax({\r\n                    url:'/user/stopuser',\r\n                    data:{\r\n                        param:{\r\n                            id: obj.id\r\n                        }\r\n                    }\r\n                }).then((res) => {\r\n                    if(res.code==0){\r\n                        message.success('状态修改成功');\r\n                        _this.requestList();\r\n                    }\r\n                })\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '序号',\r\n                dataIndex: 'id',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '用户名',\r\n                dataIndex: 'user',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: 'UID',\r\n                dataIndex: 'uid',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '常住地',\r\n                dataIndex: 'address',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '性别',\r\n                dataIndex: 'gender',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record) => {\r\n                    return record == 1 ? '男' : '女'\r\n                }\r\n            }, {\r\n                title: '身份标签',\r\n                dataIndex: 'itag',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record) => {\r\n                    return record == 1 ? '用户' : record == 2 ? '官方用户' : record == 3 ? '公司员工' : ''\r\n                }\r\n            }, {\r\n                title: '手机号',\r\n                dataIndex: 'phone',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '文章数',\r\n                dataIndex: 'articlesize',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '收藏数',\r\n                dataIndex: 'collectsize',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '评论数',\r\n                dataIndex: 'discusssize',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record) => {\r\n                    return record == \"0\" ? \"禁用\" : \"启用\"\r\n                }\r\n            }, {\r\n                title: '注册时间',\r\n                dataIndex: 'regtime',\r\n                width: 100,\r\n                align: \"center\"\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'operator',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record, obj) => {\r\n                    return (\r\n                        <div>\r\n                            <a href=\"JavaScript:void (0)\" onClick={() => this.handleClickEdit(obj)}>编辑</a> |\r\n                            <a href=\"JavaScript:void (0)\"\r\n                               onClick={() => this.handleClickUse(obj)}>{obj.status == 0 ? '禁用' : '启用'}</a>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Col span={18}>\r\n                        <BaseForm formList={this.formList} filterSubmit={this.handleFilter.bind(this)}></BaseForm>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button type=\"primary\" onClick={this.handleCreate.bind(this)}>新建</Button>\r\n\r\n                </Col>\r\n                </Card>\r\n                <Card>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n                {/*    <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <p>你确定要启用吗？</p>\r\n                </Modal>*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | editList\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Card, Breadcrumb, Form, Input, Radio, Button, Select, message} from \"antd\";\r\n\r\nimport axios from './../../../axios';\r\n\r\nimport './../userlist.less';\r\n\r\nconst FormItem = Form.Item;\r\nconst TextArea = Input.TextArea;\r\nconst Option = Select.Option;\r\n\r\nclass EditList extends Component {\r\n    state = {\r\n        list: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.id\r\n        this.requestList(userId)\r\n    }\r\n\r\n    requestList = (id) => {\r\n        axios.ajax({\r\n            url: 'user/getuserinfo',\r\n            data: {\r\n                param: {\r\n                    userId: id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code == 0) {\r\n                this.setState({\r\n                    list: res.data.item_list\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /*编辑更新*/\r\n    handleUpdata(fieldForms) {\r\n        const id = fieldForms['uid'];\r\n        const type = fieldForms['label'];\r\n        const status = fieldForms['status'];\r\n        const remark = fieldForms['remark'];\r\n        axios.ajax({\r\n            url: '/user/useredit',\r\n            data: {\r\n                param: {\r\n                    id,\r\n                    type,\r\n                    status,\r\n                    remark\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code == 0) {\r\n                message.success(\"修改成功\")\r\n                window.history.back();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCancel() {\r\n        window.history.back();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Breadcrumb separator=\">\" style={{fontSize: 18}}>\r\n                        <Breadcrumb.Item href=\"/admin/user/list\">用户管理</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>编辑账号</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Card>\r\n                <Card style={{marginTop: 10}}>\r\n                    <FormAccount filterForm={this.state.list} filterItem={this.handleUpdata}\r\n                                 cancelBtn={this.handleCancel}>\r\n                    </FormAccount>\r\n\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EditList\r\n\r\nclass FormAccount extends Component {\r\n    handleSelectChange = (value) => {\r\n        /*  this.props.form.setFieldsValue({\r\n              note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\r\n          });*/\r\n    }\r\n    handleClickSave = () => {\r\n        const fieldForm = this.props.form.getFieldsValue();\r\n        this.props.filterItem(fieldForm);\r\n    }\r\n    handleClickCancel = () => {\r\n        this.props.cancelBtn();\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 2\r\n            },\r\n            wrapperCol: {\r\n                span: 5\r\n            }\r\n        }\r\n        const {getFieldDecorator} = this.props.form;\r\n        const data = this.props.filterForm || '';\r\n        return (\r\n            <div>\r\n                <Form layout=\"horizontal\">\r\n                    <FormItem label=\"UID\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"uid\", {\r\n                                initialValue: data.id\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"用户名/昵称\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"nickName\", {\r\n                                initialValue: data.nick_name\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"身份标签\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"label\", {\r\n                                initialValue: (data.type + '')\r\n                            })(\r\n                                <Select\r\n                                    onChange={this.handleSelectChange}\r\n                                >\r\n                                    <Option value=\"1\">用户</Option>\r\n                                    <Option value=\"2\">官方号</Option>\r\n                                    <Option value=\"3\">公司员工</Option>\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"头像\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"headPic\", {\r\n                                initialValue: data.logo\r\n                            })(\r\n                                <div>\r\n                                    <Input type=\"hidden\"/>\r\n                                    <img src={data.logo}></img>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"性别\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"sex\", {\r\n                                initialValue: data.sex == 0 ? \"女\" : '男'\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"城市\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"city\", {\r\n                                initialValue: data.city_id\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"登录密码\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"psw\", {\r\n                                initialValue: data.user_pwd\r\n                            })(\r\n                                <Input type='password' className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"手机号\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"phone\", {\r\n                                initialValue: data.tel\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"状态\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"status\", {\r\n                                initialValue: (data.status + '') || '0'\r\n                            })(\r\n                                <Select>\r\n                                    <Option value=\"0\">启用</Option>\r\n                                    <Option value=\"1\">禁用</Option>\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"文章数\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"article\", {\r\n                                initialValue: data.article_count\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"收藏数\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"collection\", {\r\n                                initialValue: data.collection_count\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"评论数\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"comment\", {\r\n                                initialValue: data.comment_count\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"注册时间\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"register\", {\r\n                                initialValue: data.time\r\n                            })(\r\n                                <Input className=\"edit-input\" readOnly/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"备注\" {...formItemLayout}>\r\n                        {\r\n                            getFieldDecorator(\"remark\", {\r\n                                initialValue: data.remark\r\n                            })(\r\n                                <TextArea rows={4}/>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem label=\"\" {...formItemLayout} wrapperCol={{span: 4, offset: 2}}>\r\n                        {\r\n                            getFieldDecorator(\"btns\")(\r\n                                <div>\r\n                                    <Button type=\"primary\" style={{marginRight: 15}}\r\n                                            onClick={this.handleClickSave}>保存</Button>\r\n                                    <Button type=\"default\" onClick={this.handleClickCancel}>取消</Button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nFormAccount = Form.create({})(FormAccount);\r\n\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | editCreate\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Card, Breadcrumb, Form, Input, Select, Radio, Modal, Button, Row, Col, Upload, Icon, message} from 'antd';\r\nimport axios from './../../../axios'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioGroup = Radio.Group;\r\nconst TextArea = Input.TextArea;\r\n\r\nclass EditCreate extends Component {\r\n\r\n    state = {\r\n        list: []\r\n    }\r\n\r\n    handleUpdata(fieldForms) {\r\n        axios.ajax({\r\n            url: '/user/newaccount',\r\n            data: {\r\n                param: {...fieldForms}\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(\"创建成功\")\r\n                window.history.back();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCancel() {\r\n        window.history.back();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Breadcrumb separator=\">\" style={{fontSize: 18}}>\r\n                        <Breadcrumb.Item href=\"/admin/user/list\">用户管理</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>新建账号</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Card>\r\n                <Card>\r\n                    <VersionForm filterForm={this.state.list}\r\n                                 filterItem={this.handleUpdata}\r\n                                 cancelBtn={this.handleCancel}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EditCreate\r\n\r\nclass VersionForm extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n    handleClickSave = (e) => {\r\n        const fieldForm = this.props.form.getFieldsValue();\r\n        this.props.filterItem(fieldForm);\r\n    }\r\n    handleClickCancel = () => {\r\n        this.props.cancelBtn();\r\n    }\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = (info) => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({loading: true});\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n                imageUrl,\r\n                loading: false,\r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'}/>\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const imageUrl = this.state.imageUrl;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 4\r\n            },\r\n            wrapperCol: {\r\n                span: 6\r\n            }\r\n        }\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"用户名/昵称\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('nickname', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入用户名/昵称!'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input placeholder=\"用户名/昵称\"/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"身份标签\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('label', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择标签!'\r\n                                }\r\n                            ],\r\n                            initialValue: '0'\r\n                        })(\r\n                            <Select>\r\n                                <option value=\"0\">选择角色</option>\r\n                                <option value=\"1\">用户</option>\r\n                                <option value=\"2\">官方号</option>\r\n                                <option value=\"3\">公司员工</option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"头像\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('img')(\r\n                            <div>\r\n                                <Upload\r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    action=\"//jsonplaceholder.typicode.com/posts/\"\r\n                                    // beforeUpload={beforeUpload}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    {imageUrl ? <img src={imageUrl} alt=\"avatar\"/> : uploadButton}\r\n                                </Upload>\r\n                                <Input type='hidden' value={imageUrl}/>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"性别\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('sex', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择性别!'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <RadioGroup>\r\n                                <Radio value={0}>男</Radio>\r\n                                <Radio value={1}>女</Radio>\r\n                            </RadioGroup>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"城市\" {...formItemLayout}>\r\n                    <Row gutter={8}>\r\n                        <Col span={12}>\r\n                            {\r\n                                getFieldDecorator('city', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择城市!'\r\n                                        },\r\n                                    ],\r\n                                    initialValue: 0\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value={0}>苏州</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            {\r\n                                getFieldDecorator('area', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择区域!'\r\n                                        },\r\n                                    ],\r\n                                    initialValue: 0\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value={0}>苏州</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </FormItem>\r\n                <FormItem label=\"登录密码\" {...formItemLayout} >\r\n                    {\r\n                        getFieldDecorator('pwd', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入登录密码!'\r\n                                },\r\n                            ]\r\n                        })(\r\n                            <Input type=\"text\"/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"手机号\" {...formItemLayout} >\r\n                    {\r\n                        getFieldDecorator('phone', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号!'\r\n                                },\r\n                            ]\r\n                        })(\r\n                            <Input type=\"text\"/>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formItemLayout} >\r\n                    {\r\n                        getFieldDecorator('statu', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请选择状态!'\r\n                                    }\r\n                                ],\r\n                                initialValue: 0\r\n                            }\r\n                        )(\r\n                            <Select>\r\n                                <Option value={1}>正常</Option>\r\n                                <Option value={0}>停用</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"备注\" {...formItemLayout} >\r\n                    {\r\n                        getFieldDecorator('remark', {})(\r\n                            <TextArea placeholder=\"请输入内容\"></TextArea>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"\" {...formItemLayout} wrapperCol={{span: 8, offset: 4}}>\r\n                    {\r\n                        getFieldDecorator('btns')(\r\n                            <div>\r\n                                <Button type=\"primary\" style={{marginRight: 15}}\r\n                                        onClick={this.handleClickSave}>保存</Button>\r\n                                <Button type=\"default\" onClick={this.handleClickCancel}>取消</Button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nVersionForm = Form.create({})(VersionForm)\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | ad\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\n\r\nimport React,{Component} from 'react';\r\nimport {Card,} from 'antd'\r\n\r\nimport BaseForm from './../../components/BaseForm'\r\n\r\nclass Adver extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Card title=\"广告管理\">\r\n\r\n            </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Adver\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | cover\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react'\r\nimport {Card, Col, Form, Table, Button, Modal} from \"antd\";\r\nimport BaseForm from \"./../../components/BaseForm\";\r\nimport axios from './../../axios';\r\nimport Utils from './../../utils/utils'\r\n\r\nclass Cover extends Component {\r\n\r\n    state = {\r\n        list: []\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestList()\r\n    }\r\n\r\n    requestList = () => {\r\n        const _this = this\r\n        axios.ajax({\r\n            url: '/cover/list',\r\n            data: {\r\n                page: this.params.page\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let list = res.data.item_list.map((item, index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    list: list,\r\n                    pagination: Utils.pagination(res, (current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '位置',\r\n            placeholder: '',\r\n            width: 100,\r\n            list: [\r\n                {\r\n                    id: 0,\r\n                    name: '全部位置'\r\n                }, {\r\n                    id: 1,\r\n                    name: '品牌榜单'\r\n                }, {\r\n                    id: 2,\r\n                    name: '分类榜单'\r\n                }, {\r\n                    id: 3,\r\n                    name: '美家案例'\r\n                }, {\r\n                    id: 4,\r\n                    name: '装修心得'\r\n                }, {\r\n                    id: 5,\r\n                    name: '话题讨论'\r\n                }, {\r\n                    id: 6,\r\n                    name: 'PK广场'\r\n                }\r\n            ],\r\n            filter: 'status',\r\n        }\r\n    ];\r\n\r\n    handleFilter() {\r\n    }\r\n\r\n    handleClickEdit(obj) {\r\n        console.log(obj)\r\n    }\r\n\r\n    handleClickUse(obj) {\r\n        console.log(obj)\r\n        const _this = this\r\n        Modal.confirm({\r\n            title: '删除提示',\r\n            content: '确定要删除',\r\n            onOk() {\r\n                axios.ajax({\r\n                    url: '/cover/del',\r\n                    data: {\r\n                        params: obj.id\r\n                    }\r\n                }).then(res => {\r\n                    if (res.code == 0) {\r\n                        _this.requestList()\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '封面ID',\r\n                dataIndex: 'id',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '位置',\r\n                dataIndex: 'position',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '封面图',\r\n                dataIndex: 'img_url',\r\n                width: 100,\r\n                align: \"center\",\r\n                render: (record, obj) => {\r\n                    return (\r\n                        <img src={obj.img_url} alt=\"\"/>\r\n                    )\r\n                }\r\n            }, {\r\n                title: '标题',\r\n                dataIndex: 'title',\r\n                width: 75,\r\n                align: \"center\"\r\n            }, {\r\n                title: '描述',\r\n                dataIndex: 'description',\r\n                width: 75,\r\n                align: \"center\",\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'operator',\r\n                width: 75,\r\n                align: \"center\",\r\n                render: (record, obj) => {\r\n                    return (\r\n                        <div>\r\n                            <a href=\"JavaScript:void (0)\" onClick={() => this.handleClickEdit(obj)}>编辑</a> |\r\n                            <a href=\"JavaScript:void (0)\"\r\n                               onClick={() => this.handleClickUse(obj)}>删除</a>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"封面管理\">\r\n                    <Col span={18}> <BaseForm formList={this.formList}\r\n                                              filterSubmit={this.handleFilter.bind(this)}></BaseForm></Col>\r\n                    <Col><Button type=\"primary\"\r\n                                 style={{backgroundColor: '#67c23a', color: '#fff', border: 'none'}}>新建封面</Button></Col>\r\n                </Card>\r\n                <Card style={{marginTop: 10}}>\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Cover\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | Router\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React, {Component} from 'react';\r\nimport {HashRouter, BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport App from './App'\r\nimport Home from './pages/home';\r\nimport Login from './pages/login';\r\nimport Admin from './admin';\r\n\r\nimport Upgrade from './pages/upgrade';\r\nimport FeedBack from './pages/user/feedback';\r\nimport UserList from './pages/user/list';\r\nimport EditList from \"./pages/user/list/editList\";\r\nimport EditCreate from './pages/user/list/editCreate'\r\nimport Adver from \"./pages/manager/ad\";\r\nimport Cover from \"./pages/manager/cover\";\r\n\r\n\r\n\r\n\r\nimport Nomatch from './pages/nomatch';\r\n\r\n\r\n\r\nexport default class IRouter extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <App>\r\n                        <Admin>\r\n                            <Route path='/login' component={Login}/>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/admin/upgrade' component={Upgrade}/>\r\n                            <Route path='/admin/user/feedback' component={FeedBack}/>\r\n                            <Route path='/admin/user/list' component={UserList}/>\r\n                            <Route path='/user/list/:id' component={EditList}/>\r\n                            <Route path='/user/editCreate' component={EditCreate}/>\r\n                            <Route path='/admin/manager/ad' component={Adver}/>\r\n                            <Route path='/admin/manager/cover' component={Cover}/>\r\n\r\n                        </Admin>\r\n                    </App>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","/**\r\n * +----------------------------------------------------------------------\r\n * | index\r\n * +----------------------------------------------------------------------\r\n * | Author: 1009239228@qq.com\r\n * +----------------------------------------------------------------------\r\n */\r\nimport React,{Component} from 'react';\r\n\r\nclass Nomatch extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                404 not found !!!\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Nomatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\n/*全局路由*/\nimport Router from './router'\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Router/>, document.getElementById('root'));\n"],"sourceRoot":""}